#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x85ae40 .scope module, "TestBench" "TestBench" 2 3;
 .timescale 0 0;
v0x8c6350_0 .var "Clk", 0 0;
v0x8c6460_0 .var "Reset", 0 0;
v0x8c64e0_0 .var "Start", 0 0;
v0x8c6560_0 .var/i "counter", 31 0;
v0x8c65e0_0 .var/i "flush", 31 0;
v0x8c6660_0 .var/i "i", 31 0;
v0x8c66e0_0 .var/i "outfile", 31 0;
v0x8c6760_0 .var/i "stall", 31 0;
S_0x858f80 .scope module, "CPU" "CPU" 2 13, 3 1, S_0x85ae40;
 .timescale 0 0;
L_0x8c8d60 .functor AND 1, L_0x8c7330, L_0x8ca540, C4<1>, C4<1>;
v0x8c5bd0_0 .net "ALU_result", 31 0, L_0x8ca410; 1 drivers
v0x8c5c50_0 .net "RTdata", 31 0, L_0x8c96a0; 1 drivers
v0x8c5cd0_0 .net *"_s5", 30 0, L_0x8c8aa0; 1 drivers
v0x8c5d50_0 .net *"_s7", 0 0, C4<0>; 1 drivers
v0x8c5e00_0 .net "branch", 0 0, L_0x8c7330; 1 drivers
v0x8c5eb0_0 .net "clk_i", 0 0, v0x8c6350_0; 1 drivers
v0x8c5f30_0 .net "inst", 31 0, L_0x8c93b0; 1 drivers
v0x8c5fb0_0 .net "inst_addr", 31 0, v0x8c3800_0; 1 drivers
v0x8c60c0_0 .net "rst_i", 0 0, v0x8c6460_0; 1 drivers
v0x8c6140_0 .net "start_i", 0 0, v0x8c64e0_0; 1 drivers
v0x8c61f0_0 .net "taken", 0 0, L_0x8c8d60; 1 drivers
v0x8c62a0_0 .net "zero", 0 0, L_0x8ca540; 1 drivers
L_0x8c8690 .part L_0x8c93b0, 0, 7;
L_0x8c8bd0 .concat [ 1 31 0 0], C4<0>, L_0x8c8aa0;
L_0x8c9790 .part L_0x8c93b0, 15, 5;
L_0x8c9880 .part L_0x8c93b0, 20, 5;
L_0x8c9970 .part L_0x8c93b0, 7, 5;
S_0x8c3e00 .scope module, "Control" "Control" 3 21, 4 1, S_0x858f80;
 .timescale 0 0;
L_0x8c6af0 .functor OR 1, L_0x8c6850, L_0x8c69b0, C4<0>, C4<0>;
L_0x8c6d20 .functor OR 1, L_0x8c6af0, L_0x8c6c30, C4<0>, C4<0>;
L_0x8c7680 .functor OR 1, L_0x8c7d30, L_0x8c7ef0, C4<0>, C4<0>;
L_0x8c8230 .functor OR 1, L_0x8c7680, L_0x8c8140, C4<0>, C4<0>;
v0x8c3f10_0 .net "ALUOp_o", 1 0, v0x8c3fe0_0; 1 drivers
v0x8c3fe0_0 .var "ALUOp_reg", 1 0;
v0x8c4060_0 .net "ALUSrc_o", 0 0, L_0x8c6ea0; 1 drivers
v0x8c4110_0 .alias "Branch_o", 0 0, v0x8c5e00_0;
v0x8c41c0_0 .net "MemRead_o", 0 0, L_0x8c7720; 1 drivers
v0x8c4270_0 .net "MemWrite_o", 0 0, L_0x8c7b60; 1 drivers
v0x8c4330_0 .net "MemtoReg_o", 0 0, v0x8c43e0_0; 1 drivers
v0x8c43e0_0 .var "MemtoReg_reg", 0 0;
v0x8c44b0_0 .net "Op_i", 6 0, L_0x8c8690; 1 drivers
v0x8c4530_0 .net "RegWrite_o", 0 0, L_0x8c8410; 1 drivers
v0x8c4640_0 .net *"_s10", 0 0, L_0x8c6af0; 1 drivers
v0x8c46c0_0 .net *"_s12", 6 0, C4<0100011>; 1 drivers
v0x8c4740_0 .net *"_s14", 0 0, L_0x8c6c30; 1 drivers
v0x8c47c0_0 .net *"_s16", 0 0, L_0x8c6d20; 1 drivers
v0x8c48e0_0 .net *"_s18", 0 0, C4<1>; 1 drivers
v0x8c4980_0 .net *"_s2", 6 0, C4<0010011>; 1 drivers
v0x8c4840_0 .net *"_s20", 0 0, C4<0>; 1 drivers
v0x8c4ad0_0 .net *"_s24", 6 0, C4<1100011>; 1 drivers
v0x8c4bf0_0 .net *"_s26", 0 0, L_0x8c7130; 1 drivers
v0x8c4c70_0 .net *"_s28", 0 0, C4<1>; 1 drivers
v0x8c4b50_0 .net *"_s30", 0 0, C4<0>; 1 drivers
v0x8c4da0_0 .net *"_s34", 6 0, C4<0000011>; 1 drivers
v0x8c4cf0_0 .net *"_s36", 0 0, L_0x8c7550; 1 drivers
v0x8c4ee0_0 .net *"_s38", 0 0, C4<1>; 1 drivers
v0x8c4e40_0 .net *"_s4", 0 0, L_0x8c6850; 1 drivers
v0x8c5030_0 .net *"_s40", 0 0, C4<0>; 1 drivers
v0x8c4f80_0 .net *"_s44", 6 0, C4<0100011>; 1 drivers
v0x8c5190_0 .net *"_s46", 0 0, L_0x8c7970; 1 drivers
v0x8c50d0_0 .net *"_s48", 0 0, C4<1>; 1 drivers
v0x8c5300_0 .net *"_s50", 0 0, C4<0>; 1 drivers
v0x8c5210_0 .net *"_s54", 6 0, C4<0110011>; 1 drivers
v0x8c5480_0 .net *"_s56", 0 0, L_0x8c7d30; 1 drivers
v0x8c5380_0 .net *"_s58", 6 0, C4<0010011>; 1 drivers
v0x8c5610_0 .net *"_s6", 6 0, C4<0000011>; 1 drivers
v0x8c5500_0 .net *"_s60", 0 0, L_0x8c7ef0; 1 drivers
v0x8c57b0_0 .net *"_s62", 0 0, L_0x8c7680; 1 drivers
v0x8c5690_0 .net *"_s64", 6 0, C4<0000011>; 1 drivers
v0x8c5730_0 .net *"_s66", 0 0, L_0x8c8140; 1 drivers
v0x8c5970_0 .net *"_s68", 0 0, L_0x8c8230; 1 drivers
v0x8c59f0_0 .net *"_s70", 0 0, C4<1>; 1 drivers
v0x8c5830_0 .net *"_s72", 0 0, C4<0>; 1 drivers
v0x8c58d0_0 .net *"_s8", 0 0, L_0x8c69b0; 1 drivers
E_0x8c2140 .event edge, v0x8c44b0_0;
L_0x8c6850 .cmp/eq 7, L_0x8c8690, C4<0010011>;
L_0x8c69b0 .cmp/eq 7, L_0x8c8690, C4<0000011>;
L_0x8c6c30 .cmp/eq 7, L_0x8c8690, C4<0100011>;
L_0x8c6ea0 .functor MUXZ 1, C4<0>, C4<1>, L_0x8c6d20, C4<>;
L_0x8c7130 .cmp/eq 7, L_0x8c8690, C4<1100011>;
L_0x8c7330 .functor MUXZ 1, C4<0>, C4<1>, L_0x8c7130, C4<>;
L_0x8c7550 .cmp/eq 7, L_0x8c8690, C4<0000011>;
L_0x8c7720 .functor MUXZ 1, C4<0>, C4<1>, L_0x8c7550, C4<>;
L_0x8c7970 .cmp/eq 7, L_0x8c8690, C4<0100011>;
L_0x8c7b60 .functor MUXZ 1, C4<0>, C4<1>, L_0x8c7970, C4<>;
L_0x8c7d30 .cmp/eq 7, L_0x8c8690, C4<0110011>;
L_0x8c7ef0 .cmp/eq 7, L_0x8c8690, C4<0010011>;
L_0x8c8140 .cmp/eq 7, L_0x8c8690, C4<0000011>;
L_0x8c8410 .functor MUXZ 1, C4<0>, C4<1>, L_0x8c8230, C4<>;
S_0x8c39b0 .scope module, "ALU_Control" "ALU_Control" 3 33, 5 1, S_0x858f80;
 .timescale 0 0;
v0x8c3b10_0 .net "ALUCtrl_o", 3 0, v0x8c3be0_0; 1 drivers
v0x8c3be0_0 .var "ALUCtrl_reg", 3 0;
v0x8c3c60_0 .alias "ALUOp_i", 1 0, v0x8c3f10_0;
v0x8c3d00_0 .alias "funct_i", 31 0, v0x8c5f30_0;
E_0x8c3aa0 .event edge, v0x8c3c60_0, v0x8c1be0_0;
S_0x8c3550 .scope module, "PC" "PC" 3 40, 6 1, S_0x858f80;
 .timescale 0 0;
v0x8c3690_0 .alias "clk_i", 0 0, v0x8c5eb0_0;
v0x8c3780_0 .net "pc_i", 31 0, L_0x8c8f60; 1 drivers
v0x8c3800_0 .var "pc_o", 31 0;
v0x8c3880_0 .alias "rst_i", 0 0, v0x8c60c0_0;
v0x8c3930_0 .alias "start_i", 0 0, v0x8c6140_0;
E_0x8c3640/0 .event negedge, v0x8c3880_0;
E_0x8c3640/1 .event posedge, v0x8c0720_0;
E_0x8c3640 .event/or E_0x8c3640/0, E_0x8c3640/1;
S_0x8c32c0 .scope module, "Add_PC" "Adder" 3 49, 7 1, S_0x858f80;
 .timescale 0 0;
v0x8c33b0_0 .alias "data1_i", 31 0, v0x8c5fb0_0;
v0x8c3430_0 .net "data2_i", 31 0, C4<00000000000000000000000000000100>; 1 drivers
v0x8c34d0_0 .net "data_o", 31 0, L_0x8c8820; 1 drivers
L_0x8c8820 .arith/sum 32, v0x8c3800_0, C4<00000000000000000000000000000100>;
S_0x8c3000 .scope module, "Add_PC_branch" "Adder" 3 56, 7 1, S_0x858f80;
 .timescale 0 0;
v0x8c30f0_0 .alias "data1_i", 31 0, v0x8c5fb0_0;
v0x8c3190_0 .net "data2_i", 31 0, L_0x8c8bd0; 1 drivers
v0x8c3210_0 .net "data_o", 31 0, L_0x8c8370; 1 drivers
L_0x8c8370 .arith/sum 32, v0x8c3800_0, L_0x8c8bd0;
S_0x8c2b00 .scope module, "MUX_PC" "MUX32" 3 65, 8 1, S_0x858f80;
 .timescale 0 0;
L_0x8c89a0 .functor XNOR 1, L_0x8c8d60, C4<0>, C4<0>, C4<0>;
v0x8c2bf0_0 .net *"_s0", 0 0, C4<0>; 1 drivers
v0x8c2c90_0 .net *"_s2", 0 0, L_0x8c89a0; 1 drivers
v0x8c2d30_0 .alias "data1_i", 31 0, v0x8c34d0_0;
v0x8c2dd0_0 .alias "data2_i", 31 0, v0x8c3210_0;
v0x8c2e80_0 .alias "data_o", 31 0, v0x8c3780_0;
v0x8c2f20_0 .alias "select_i", 0 0, v0x8c61f0_0;
L_0x8c8f60 .functor MUXZ 32, L_0x8c8370, L_0x8c8820, L_0x8c89a0, C4<>;
S_0x8c2610 .scope module, "Instruction_Memory" "Instruction_Memory" 3 73, 9 1, S_0x858f80;
 .timescale 0 0;
L_0x8c93b0 .functor BUFZ 32, L_0x8c90a0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8c2700_0 .net *"_s0", 31 0, L_0x8c90a0; 1 drivers
v0x8c27a0_0 .net *"_s2", 31 0, L_0x8c9220; 1 drivers
v0x8c2840_0 .net *"_s4", 29 0, L_0x8c9140; 1 drivers
v0x8c28e0_0 .net *"_s6", 1 0, C4<00>; 1 drivers
v0x8c2960_0 .alias "addr_i", 31 0, v0x8c5fb0_0;
v0x8c2a00_0 .alias "instr_o", 31 0, v0x8c5f30_0;
v0x8c2a80 .array "memory", 255 0, 31 0;
L_0x8c90a0 .array/port v0x8c2a80, L_0x8c9220;
L_0x8c9140 .part v0x8c3800_0, 2, 30;
L_0x8c9220 .concat [ 30 2 0 0], L_0x8c9140, C4<00>;
S_0x8c1de0 .scope module, "Registers" "Registers" 3 79, 10 1, S_0x858f80;
 .timescale 0 0;
L_0x8c9500 .functor BUFZ 32, L_0x8c9460, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x8c96a0 .functor BUFZ 32, L_0x8c9600, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8c1ed0_0 .net "RDaddr_i", 4 0, L_0x8c9970; 1 drivers
v0x8c1f90_0 .net "RDdata_i", 31 0, L_0x8cb420; 1 drivers
v0x8c2040_0 .net "RSaddr_i", 4 0, L_0x8c9790; 1 drivers
v0x8c20c0_0 .net "RSdata_o", 31 0, L_0x8c9500; 1 drivers
v0x8c21a0_0 .net "RTaddr_i", 4 0, L_0x8c9880; 1 drivers
v0x8c2220_0 .alias "RTdata_o", 31 0, v0x8c5c50_0;
v0x8c22a0_0 .alias "RegWrite_i", 0 0, v0x8c4530_0;
v0x8c2320_0 .net *"_s0", 31 0, L_0x8c9460; 1 drivers
v0x8c2410_0 .net *"_s4", 31 0, L_0x8c9600; 1 drivers
v0x8c24b0_0 .alias "clk_i", 0 0, v0x8c5eb0_0;
v0x8c2590 .array "register", 31 0, 31 0;
L_0x8c9460 .array/port v0x8c2590, L_0x8c9790;
L_0x8c9600 .array/port v0x8c2590, L_0x8c9880;
S_0x8c1600 .scope module, "Sign_Extend" "Sign_Extend" 3 91, 11 1, S_0x858f80;
 .timescale 0 0;
L_0x8c8730 .functor BUFZ 12, v0x8c1d00_0, C4<000000000000>, C4<000000000000>, C4<000000000000>;
L_0x8c8ea0 .functor XNOR 1, L_0x8c9d40, C4<0>, C4<0>, C4<0>;
v0x8c1710_0 .net *"_s11", 0 0, L_0x8c8ea0; 1 drivers
v0x8c17d0_0 .net *"_s13", 19 0, C4<00000000000000000000>; 1 drivers
v0x8c1870_0 .net *"_s15", 19 0, C4<00000000000000000001>; 1 drivers
v0x8c1910_0 .net *"_s17", 19 0, L_0x8c9e20; 1 drivers
v0x8c19c0_0 .net *"_s4", 11 0, L_0x8c8730; 1 drivers
v0x8c1a60_0 .net *"_s8", 0 0, L_0x8c9d40; 1 drivers
v0x8c1b40_0 .net *"_s9", 0 0, C4<0>; 1 drivers
v0x8c1be0_0 .alias "data_i", 31 0, v0x8c5f30_0;
RS_0x7f92e54e9648 .resolv tri, L_0x8c9b20, L_0x8c9c10, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8c1c80_0 .net8 "data_o", 31 0, RS_0x7f92e54e9648; 2 drivers
v0x8c1d00_0 .var "imm_reg", 11 0;
E_0x8c0d60 .event edge, v0x8c1be0_0;
L_0x8c8aa0 .part RS_0x7f92e54e9648, 0, 31;
L_0x8c9b20 .part/pv L_0x8c8730, 0, 12, 32;
L_0x8c9c10 .part/pv L_0x8c9e20, 12, 20, 32;
L_0x8c9d40 .part v0x8c1d00_0, 11, 1;
L_0x8c9e20 .functor MUXZ 20, C4<00000000000000000001>, C4<00000000000000000000>, L_0x8c8ea0, C4<>;
S_0x8c1180 .scope module, "MUX_ALUSrc" "MUX32" 3 97, 8 1, S_0x858f80;
 .timescale 0 0;
L_0x8ca220 .functor XNOR 1, L_0x8c6ea0, C4<0>, C4<0>, C4<0>;
v0x8c1270_0 .net *"_s0", 0 0, C4<0>; 1 drivers
v0x8c1330_0 .net *"_s2", 0 0, L_0x8ca220; 1 drivers
v0x8c13d0_0 .alias "data1_i", 31 0, v0x8c5c50_0;
v0x8c1450_0 .alias "data2_i", 31 0, v0x8c1c80_0;
v0x8c14d0_0 .net "data_o", 31 0, L_0x8ca2d0; 1 drivers
v0x8c1580_0 .alias "select_i", 0 0, v0x8c4060_0;
L_0x8ca2d0 .functor MUXZ 32, RS_0x7f92e54e9648, L_0x8c96a0, L_0x8ca220, C4<>;
S_0x8c09f0 .scope module, "ALU" "ALU" 3 105, 12 1, S_0x858f80;
 .timescale 0 0;
L_0x8ca410 .functor BUFZ 32, v0x8c10e0_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8c0ae0_0 .alias "ALUCtrl_i", 3 0, v0x8c3b10_0;
v0x8c0ba0_0 .alias "Zero_o", 0 0, v0x8c62a0_0;
v0x8c0c40_0 .net *"_s2", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v0x8c0ce0_0 .net *"_s4", 0 0, L_0x8c9fc0; 1 drivers
v0x8c0d90_0 .net *"_s6", 0 0, C4<1>; 1 drivers
v0x8c0e30_0 .net *"_s8", 0 0, C4<0>; 1 drivers
v0x8c0ed0_0 .alias "data1_i", 31 0, v0x8c20c0_0;
v0x8c0f70_0 .alias "data2_i", 31 0, v0x8c14d0_0;
v0x8c1010_0 .alias "data_o", 31 0, v0x8c5bd0_0;
v0x8c10e0_0 .var "data_reg", 31 0;
E_0x8c07d0 .event edge, v0x8c0ae0_0, v0x8c0f70_0, v0x8c0ed0_0;
L_0x8c9fc0 .cmp/eq 32, v0x8c10e0_0, C4<00000000000000000000000000000000>;
L_0x8ca540 .functor MUXZ 1, C4<0>, C4<1>, L_0x8c9fc0, C4<>;
S_0x8bfaa0 .scope module, "Data_Memory" "Data_Memory" 3 114, 13 1, S_0x858f80;
 .timescale 0 0;
L_0x8ca8a0 .functor XNOR 1, L_0x8c7720, C4<1>, C4<0>, C4<0>;
L_0x8ca6c0 .functor XNOR 1, L_0x8ca9f0, C4<0>, C4<0>, C4<0>;
v0x8bfbd0_0 .alias "MemRead_i", 0 0, v0x8c41c0_0;
v0x8bfc90_0 .alias "MemWrite_i", 0 0, v0x8c4270_0;
v0x8bfd30_0 .net *"_s0", 0 0, C4<1>; 1 drivers
v0x8bfdd0_0 .net *"_s10", 0 0, L_0x8ca6c0; 1 drivers
v0x8bfe80_0 .net *"_s12", 23 0, C4<000000000000000000000000>; 1 drivers
v0x8bff20_0 .net *"_s14", 23 0, C4<000000000000000000000001>; 1 drivers
v0x8c0000_0 .net *"_s16", 23 0, L_0x8cab20; 1 drivers
v0x8c00a0_0 .net *"_s18", 7 0, L_0x8cae70; 1 drivers
v0x8c0190_0 .net *"_s2", 0 0, L_0x8ca8a0; 1 drivers
v0x8c0230_0 .net *"_s20", 31 0, L_0x8caf10; 1 drivers
v0x8c0330_0 .net *"_s22", 31 0, C4<00000000000000000000000000000000>; 1 drivers
v0x8c03d0_0 .net *"_s4", 7 0, L_0x8ca950; 1 drivers
v0x8c04e0_0 .net *"_s7", 0 0, L_0x8ca9f0; 1 drivers
v0x8c0580_0 .net *"_s8", 0 0, C4<0>; 1 drivers
v0x8c06a0_0 .alias "addr_i", 31 0, v0x8c5bd0_0;
v0x8c0720_0 .alias "clk_i", 0 0, v0x8c5eb0_0;
v0x8c0600_0 .alias "data_i", 31 0, v0x8c5c50_0;
v0x8c0850_0 .net "data_o", 31 0, L_0x8cb090; 1 drivers
v0x8c0970 .array "memory", 31 0, 7 0;
E_0x8bf8f0 .event posedge, v0x8c0720_0;
L_0x8ca950 .array/port v0x8c0970, L_0x8ca410;
L_0x8ca9f0 .part L_0x8ca950, 7, 1;
L_0x8cab20 .functor MUXZ 24, C4<000000000000000000000001>, C4<000000000000000000000000>, L_0x8ca6c0, C4<>;
L_0x8cae70 .array/port v0x8c0970, L_0x8ca410;
L_0x8caf10 .concat [ 8 24 0 0], L_0x8cae70, L_0x8cab20;
L_0x8cb090 .functor MUXZ 32, C4<00000000000000000000000000000000>, L_0x8caf10, L_0x8ca8a0, C4<>;
S_0x88c3b0 .scope module, "MUX_MemtoReg" "MUX32" 3 124, 8 1, S_0x858f80;
 .timescale 0 0;
L_0x8cacb0 .functor XNOR 1, v0x8c43e0_0, C4<0>, C4<0>, C4<0>;
v0x82b180_0 .net *"_s0", 0 0, C4<0>; 1 drivers
v0x8bf730_0 .net *"_s2", 0 0, L_0x8cacb0; 1 drivers
v0x8bf7d0_0 .alias "data1_i", 31 0, v0x8c5bd0_0;
v0x8bf870_0 .alias "data2_i", 31 0, v0x8c0850_0;
v0x8bf920_0 .alias "data_o", 31 0, v0x8c1f90_0;
v0x8bf9c0_0 .alias "select_i", 0 0, v0x8c4330_0;
L_0x8cb420 .functor MUXZ 32, L_0x8cb090, L_0x8ca410, L_0x8cacb0, C4<>;
    .scope S_0x8c3e00;
T_0 ;
    %wait E_0x8c2140;
    %load/v 8, v0x8c44b0_0, 7;
    %cmpi/u 8, 51, 7;
    %jmp/0xz  T_0.0, 4;
    %movi 8, 2, 2;
    %set/v v0x8c3fe0_0, 8, 2;
    %set/v v0x8c43e0_0, 0, 1;
    %jmp T_0.1;
T_0.0 ;
    %load/v 8, v0x8c44b0_0, 7;
    %cmpi/u 8, 19, 7;
    %jmp/0xz  T_0.2, 4;
    %set/v v0x8c3fe0_0, 1, 2;
    %set/v v0x8c43e0_0, 0, 1;
    %jmp T_0.3;
T_0.2 ;
    %load/v 8, v0x8c44b0_0, 7;
    %cmpi/u 8, 3, 7;
    %jmp/0xz  T_0.4, 4;
    %set/v v0x8c3fe0_0, 0, 2;
    %set/v v0x8c43e0_0, 1, 1;
    %jmp T_0.5;
T_0.4 ;
    %load/v 8, v0x8c44b0_0, 7;
    %cmpi/u 8, 35, 7;
    %jmp/0xz  T_0.6, 4;
    %set/v v0x8c3fe0_0, 0, 2;
    %jmp T_0.7;
T_0.6 ;
    %load/v 8, v0x8c44b0_0, 7;
    %cmpi/u 8, 99, 7;
    %jmp/0xz  T_0.8, 4;
    %movi 8, 1, 2;
    %set/v v0x8c3fe0_0, 8, 2;
T_0.8 ;
T_0.7 ;
T_0.5 ;
T_0.3 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x8c39b0;
T_1 ;
    %wait E_0x8c3aa0;
    %load/v 8, v0x8c3c60_0, 2;
    %cmpi/u 8, 2, 2;
    %jmp/0xz  T_1.0, 4;
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.2, 4;
    %load/x1p 8, v0x8c3d00_0, 3;
    %jmp T_1.3;
T_1.2 ;
    %mov 8, 2, 3;
T_1.3 ;
; Save base=8 wid=3 in lookaside.
    %cmpi/u 8, 0, 3;
    %jmp/0xz  T_1.4, 4;
    %ix/load 1, 25, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.6, 4;
    %load/x1p 8, v0x8c3d00_0, 7;
    %jmp T_1.7;
T_1.6 ;
    %mov 8, 2, 7;
T_1.7 ;
; Save base=8 wid=7 in lookaside.
    %cmpi/u 8, 0, 7;
    %jmp/0xz  T_1.8, 4;
    %movi 8, 2, 4;
    %set/v v0x8c3be0_0, 8, 4;
    %jmp T_1.9;
T_1.8 ;
    %ix/load 1, 25, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.10, 4;
    %load/x1p 8, v0x8c3d00_0, 7;
    %jmp T_1.11;
T_1.10 ;
    %mov 8, 2, 7;
T_1.11 ;
; Save base=8 wid=7 in lookaside.
    %cmpi/u 8, 32, 7;
    %jmp/0xz  T_1.12, 4;
    %movi 8, 6, 4;
    %set/v v0x8c3be0_0, 8, 4;
    %jmp T_1.13;
T_1.12 ;
    %ix/load 1, 25, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.14, 4;
    %load/x1p 8, v0x8c3d00_0, 7;
    %jmp T_1.15;
T_1.14 ;
    %mov 8, 2, 7;
T_1.15 ;
; Save base=8 wid=7 in lookaside.
    %cmpi/u 8, 1, 7;
    %jmp/0xz  T_1.16, 4;
    %movi 8, 7, 4;
    %set/v v0x8c3be0_0, 8, 4;
T_1.16 ;
T_1.13 ;
T_1.9 ;
    %jmp T_1.5;
T_1.4 ;
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.18, 4;
    %load/x1p 8, v0x8c3d00_0, 3;
    %jmp T_1.19;
T_1.18 ;
    %mov 8, 2, 3;
T_1.19 ;
; Save base=8 wid=3 in lookaside.
    %cmpi/u 8, 7, 3;
    %jmp/0xz  T_1.20, 4;
    %set/v v0x8c3be0_0, 0, 4;
    %jmp T_1.21;
T_1.20 ;
    %ix/load 1, 12, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.22, 4;
    %load/x1p 8, v0x8c3d00_0, 3;
    %jmp T_1.23;
T_1.22 ;
    %mov 8, 2, 3;
T_1.23 ;
; Save base=8 wid=3 in lookaside.
    %cmpi/u 8, 6, 3;
    %jmp/0xz  T_1.24, 4;
    %movi 8, 1, 4;
    %set/v v0x8c3be0_0, 8, 4;
T_1.24 ;
T_1.21 ;
T_1.5 ;
    %jmp T_1.1;
T_1.0 ;
    %load/v 8, v0x8c3c60_0, 2;
    %cmpi/u 8, 3, 2;
    %mov 8, 4, 1;
    %load/v 9, v0x8c3c60_0, 2;
    %cmpi/u 9, 0, 2;
    %or 8, 4, 1;
    %jmp/0xz  T_1.26, 8;
    %movi 8, 2, 4;
    %set/v v0x8c3be0_0, 8, 4;
    %jmp T_1.27;
T_1.26 ;
    %load/v 8, v0x8c3c60_0, 2;
    %cmpi/u 8, 1, 2;
    %jmp/0xz  T_1.28, 4;
    %movi 8, 6, 4;
    %set/v v0x8c3be0_0, 8, 4;
T_1.28 ;
T_1.27 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0x8c3550;
T_2 ;
    %wait E_0x8c3640;
    %load/v 8, v0x8c3880_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_2.0, 8;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8c3800_0, 0, 0;
    %jmp T_2.1;
T_2.0 ;
    %load/v 8, v0x8c3930_0, 1;
    %jmp/0xz  T_2.2, 8;
    %load/v 8, v0x8c3780_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8c3800_0, 0, 8;
    %jmp T_2.3;
T_2.2 ;
    %load/v 8, v0x8c3800_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8c3800_0, 0, 8;
T_2.3 ;
T_2.1 ;
    %jmp T_2;
    .thread T_2;
    .scope S_0x8c1de0;
T_3 ;
    %wait E_0x8bf8f0;
    %load/v 8, v0x8c22a0_0, 1;
    %jmp/0xz  T_3.0, 8;
    %load/v 8, v0x8c1f90_0, 32;
    %ix/getv 3, v0x8c1ed0_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8c2590, 0, 8;
t_0 ;
T_3.0 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0x8c1600;
T_4 ;
    %wait E_0x8c0d60;
    %load/v 8, v0x8c1be0_0, 7; Only need 7 of 32 bits
; Save base=8 wid=7 in lookaside.
    %cmpi/u 8, 19, 7;
    %mov 8, 4, 1;
    %load/v 9, v0x8c1be0_0, 7; Select 7 out of 32 bits
    %mov 16, 0, 1;
    %cmpi/u 9, 11, 8;
    %or 8, 4, 1;
    %jmp/0xz  T_4.0, 8;
    %ix/load 1, 20, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.2, 4;
    %load/x1p 8, v0x8c1be0_0, 12;
    %jmp T_4.3;
T_4.2 ;
    %mov 8, 2, 12;
T_4.3 ;
; Save base=8 wid=12 in lookaside.
    %set/v v0x8c1d00_0, 8, 12;
    %jmp T_4.1;
T_4.0 ;
    %load/v 8, v0x8c1be0_0, 7; Only need 7 of 32 bits
; Save base=8 wid=7 in lookaside.
    %cmpi/u 8, 35, 7;
    %jmp/0xz  T_4.4, 4;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.6, 4;
    %load/x1p 8, v0x8c1be0_0, 5;
    %jmp T_4.7;
T_4.6 ;
    %mov 8, 2, 5;
T_4.7 ;
; Save base=8 wid=5 in lookaside.
    %ix/load 0, 0, 0;
    %set/x0 v0x8c1d00_0, 8, 5;
    %ix/load 1, 25, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.8, 4;
    %load/x1p 8, v0x8c1be0_0, 7;
    %jmp T_4.9;
T_4.8 ;
    %mov 8, 2, 7;
T_4.9 ;
; Save base=8 wid=7 in lookaside.
    %ix/load 0, 5, 0;
    %set/x0 v0x8c1d00_0, 8, 7;
    %jmp T_4.5;
T_4.4 ;
    %load/v 8, v0x8c1be0_0, 7; Only need 7 of 32 bits
; Save base=8 wid=7 in lookaside.
    %cmpi/u 8, 99, 7;
    %jmp/0xz  T_4.10, 4;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.12, 4;
    %load/x1p 8, v0x8c1be0_0, 4;
    %jmp T_4.13;
T_4.12 ;
    %mov 8, 2, 4;
T_4.13 ;
; Save base=8 wid=4 in lookaside.
    %ix/load 0, 0, 0;
    %set/x0 v0x8c1d00_0, 8, 4;
    %ix/load 1, 25, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.14, 4;
    %load/x1p 8, v0x8c1be0_0, 6;
    %jmp T_4.15;
T_4.14 ;
    %mov 8, 2, 6;
T_4.15 ;
; Save base=8 wid=6 in lookaside.
    %ix/load 0, 4, 0;
    %set/x0 v0x8c1d00_0, 8, 6;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.16, 4;
    %load/x1p 8, v0x8c1be0_0, 1;
    %jmp T_4.17;
T_4.16 ;
    %mov 8, 2, 1;
T_4.17 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 10, 0;
    %set/x0 v0x8c1d00_0, 8, 1;
    %ix/load 1, 31, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.18, 4;
    %load/x1p 8, v0x8c1be0_0, 1;
    %jmp T_4.19;
T_4.18 ;
    %mov 8, 2, 1;
T_4.19 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 11, 0;
    %set/x0 v0x8c1d00_0, 8, 1;
T_4.10 ;
T_4.5 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0x8c09f0;
T_5 ;
    %wait E_0x8c07d0;
    %load/v 8, v0x8c0ae0_0, 4;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_5.0, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_5.1, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_5.2, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_5.3, 6;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_5.4, 6;
    %jmp T_5.5;
T_5.0 ;
    %load/v 8, v0x8c0ed0_0, 32;
    %load/v 40, v0x8c0f70_0, 32;
    %add 8, 40, 32;
    %set/v v0x8c10e0_0, 8, 32;
    %jmp T_5.5;
T_5.1 ;
    %load/v 8, v0x8c0ed0_0, 32;
    %load/v 40, v0x8c0f70_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8c10e0_0, 8, 32;
    %jmp T_5.5;
T_5.2 ;
    %load/v 8, v0x8c0ed0_0, 32;
    %load/v 40, v0x8c0f70_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8c10e0_0, 8, 32;
    %jmp T_5.5;
T_5.3 ;
    %load/v 8, v0x8c0ed0_0, 32;
    %load/v 40, v0x8c0f70_0, 32;
    %and 8, 40, 32;
    %set/v v0x8c10e0_0, 8, 32;
    %jmp T_5.5;
T_5.4 ;
    %load/v 8, v0x8c0ed0_0, 32;
    %load/v 40, v0x8c0f70_0, 32;
    %or 8, 40, 32;
    %set/v v0x8c10e0_0, 8, 32;
    %jmp T_5.5;
T_5.5 ;
    %jmp T_5;
    .thread T_5, $push;
    .scope S_0x8bfaa0;
T_6 ;
    %wait E_0x8bf8f0;
    %load/v 8, v0x8bfc90_0, 1;
    %jmp/0xz  T_6.0, 8;
    %load/v 8, v0x8c0600_0, 8; Only need 8 of 32 bits
; Save base=8 wid=8 in lookaside.
    %ix/getv 3, v0x8c06a0_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8c0970, 0, 8;
t_1 ;
T_6.0 ;
    %jmp T_6;
    .thread T_6;
    .scope S_0x85ae40;
T_7 ;
    %delay 25, 0;
    %load/v 8, v0x8c6350_0, 1;
    %inv 8, 1;
    %set/v v0x8c6350_0, 8, 1;
    %jmp T_7;
    .thread T_7;
    .scope S_0x85ae40;
T_8 ;
    %set/v v0x8c6560_0, 0, 32;
    %set/v v0x8c6760_0, 0, 32;
    %set/v v0x8c65e0_0, 0, 32;
    %set/v v0x8c6660_0, 0, 32;
T_8.0 ;
    %load/v 8, v0x8c6660_0, 32;
   %cmpi/s 8, 256, 32;
    %jmp/0xz T_8.1, 5;
    %ix/getv/s 3, v0x8c6660_0;
   %jmp/1 t_2, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8c2a80, 0, 32;
t_2 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0x8c6660_0, 32;
    %set/v v0x8c6660_0, 8, 32;
    %jmp T_8.0;
T_8.1 ;
    %set/v v0x8c6660_0, 0, 32;
T_8.2 ;
    %load/v 8, v0x8c6660_0, 32;
   %cmpi/s 8, 32, 32;
    %jmp/0xz T_8.3, 5;
    %ix/getv/s 3, v0x8c6660_0;
   %jmp/1 t_3, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8c0970, 0, 8;
t_3 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0x8c6660_0, 32;
    %set/v v0x8c6660_0, 8, 32;
    %jmp T_8.2;
T_8.3 ;
    %set/v v0x8c6660_0, 0, 32;
T_8.4 ;
    %load/v 8, v0x8c6660_0, 32;
   %cmpi/s 8, 32, 32;
    %jmp/0xz T_8.5, 5;
    %ix/getv/s 3, v0x8c6660_0;
   %jmp/1 t_4, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8c2590, 0, 32;
t_4 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0x8c6660_0, 32;
    %set/v v0x8c6660_0, 8, 32;
    %jmp T_8.4;
T_8.5 ;
    %vpi_call 2 40 "$readmemb", "instruction.txt", v0x8c2a80;
    %vpi_func 2 43 "$fopen", 8, 32, "output.txt";
    %movi 40, 1, 32;
    %or 8, 40, 32;
    %set/v v0x8c66e0_0, 8, 32;
    %movi 8, 5, 8;
   %ix/load 1, 0, 0;
   %ix/load 3, 0, 0;
   %set/av v0x8c0970, 8, 8;
    %set/v v0x8c6350_0, 0, 1;
    %set/v v0x8c6460_0, 0, 1;
    %set/v v0x8c64e0_0, 0, 1;
    %delay 12, 0;
    %set/v v0x8c6460_0, 1, 1;
    %set/v v0x8c64e0_0, 1, 1;
    %end;
    .thread T_8;
    .scope S_0x85ae40;
T_9 ;
    %wait E_0x8bf8f0;
    %load/v 8, v0x8c6560_0, 32;
    %cmpi/u 8, 30, 32;
    %jmp/0xz  T_9.0, 4;
    %vpi_call 2 61 "$stop";
T_9.0 ;
    %vpi_call 2 68 "$fdisplay", v0x8c66e0_0, "cycle = %d, Start = %d, Stall = %d, Flush = %d\012PC = %d", v0x8c6560_0, v0x8c64e0_0, v0x8c6760_0, v0x8c65e0_0, v0x8c3800_0;
    %vpi_call 2 71 "$fdisplay", v0x8c66e0_0, "Registers";
    %vpi_call 2 72 "$fdisplay", v0x8c66e0_0, "R0(r0) = %d, R8 (t0) = %d, R16(s0) = %d, R24(t8) = %d", &A<v0x8c2590, 0>, &A<v0x8c2590, 8>, &A<v0x8c2590, 16>, &A<v0x8c2590, 24>;
    %vpi_call 2 73 "$fdisplay", v0x8c66e0_0, "R1(at) = %d, R9 (t1) = %d, R17(s1) = %d, R25(t9) = %d", &A<v0x8c2590, 1>, &A<v0x8c2590, 9>, &A<v0x8c2590, 17>, &A<v0x8c2590, 25>;
    %vpi_call 2 74 "$fdisplay", v0x8c66e0_0, "R2(v0) = %d, R10(t2) = %d, R18(s2) = %d, R26(k0) = %d", &A<v0x8c2590, 2>, &A<v0x8c2590, 10>, &A<v0x8c2590, 18>, &A<v0x8c2590, 26>;
    %vpi_call 2 75 "$fdisplay", v0x8c66e0_0, "R3(v1) = %d, R11(t3) = %d, R19(s3) = %d, R27(k1) = %d", &A<v0x8c2590, 3>, &A<v0x8c2590, 11>, &A<v0x8c2590, 19>, &A<v0x8c2590, 27>;
    %vpi_call 2 76 "$fdisplay", v0x8c66e0_0, "R4(a0) = %d, R12(t4) = %d, R20(s4) = %d, R28(gp) = %d", &A<v0x8c2590, 4>, &A<v0x8c2590, 12>, &A<v0x8c2590, 20>, &A<v0x8c2590, 28>;
    %vpi_call 2 77 "$fdisplay", v0x8c66e0_0, "R5(a1) = %d, R13(t5) = %d, R21(s5) = %d, R29(sp) = %d", &A<v0x8c2590, 5>, &A<v0x8c2590, 13>, &A<v0x8c2590, 21>, &A<v0x8c2590, 29>;
    %vpi_call 2 78 "$fdisplay", v0x8c66e0_0, "R6(a2) = %d, R14(t6) = %d, R22(s6) = %d, R30(s8) = %d", &A<v0x8c2590, 6>, &A<v0x8c2590, 14>, &A<v0x8c2590, 22>, &A<v0x8c2590, 30>;
    %vpi_call 2 79 "$fdisplay", v0x8c66e0_0, "R7(a3) = %d, R15(t7) = %d, R23(s7) = %d, R31(ra) = %d", &A<v0x8c2590, 7>, &A<v0x8c2590, 15>, &A<v0x8c2590, 23>, &A<v0x8c2590, 31>;
    %ix/load 3, 0, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 1, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 2, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 3, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 82 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x00 = %d", T<8,32,u>;
    %ix/load 3, 4, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 5, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 6, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 7, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 83 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x04 = %d", T<8,32,u>;
    %ix/load 3, 8, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 9, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 10, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 11, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 84 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x08 = %d", T<8,32,u>;
    %ix/load 3, 12, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 13, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 14, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 15, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 85 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x0c = %d", T<8,32,u>;
    %ix/load 3, 16, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 17, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 18, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 19, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 86 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x10 = %d", T<8,32,u>;
    %ix/load 3, 20, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 21, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 22, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 23, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 87 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x14 = %d", T<8,32,u>;
    %ix/load 3, 24, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 25, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 26, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 27, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 88 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x18 = %d", T<8,32,u>;
    %ix/load 3, 28, 0;
    %mov 4, 0, 1;
    %load/av 8, v0x8c0970, 8;
    %ix/load 3, 29, 0;
    %mov 4, 0, 1;
    %load/av 16, v0x8c0970, 8;
    %ix/load 3, 30, 0;
    %mov 4, 0, 1;
    %load/av 24, v0x8c0970, 8;
    %ix/load 3, 31, 0;
    %mov 4, 0, 1;
    %load/av 32, v0x8c0970, 8;
    %vpi_call 2 89 "$fdisplay", v0x8c66e0_0, "Data Memory: 0x1c = %d", T<8,32,u>;
    %vpi_call 2 91 "$fdisplay", v0x8c66e0_0, "\012";
    %load/v 8, v0x8c6560_0, 32;
    %mov 40, 39, 1;
    %addi 8, 1, 33;
    %set/v v0x8c6560_0, 8, 32;
    %jmp T_9;
    .thread T_9;
# The file index is used to find the file name in the following table.
:file_names 14;
    "N/A";
    "<interactive>";
    "testbench.v";
    "CPU.v";
    "Control.v";
    "ALU_Control.v";
    "PC.v";
    "Adder.v";
    "MUX32.v";
    "Instruction_Memory.v";
    "Registers.v";
    "Sign_Extend.v";
    "ALU.v";
    "Data_Memory.v";
